- name: Check versions
  hosts: all[0]
#  vars:
#    f5_version: 12.1.2
#    f5_build: 1.0.271
#    f5_edition: 'Hotfix HF1'
  connection: local

  tasks:
      - name: Get bigip facts
        bigip_facts:
            include: "software,system_info"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost
#        register: bigip_fact_out
#      - debug: var=bigip_fact_out

#      - debug:
#          msg: "{{ software[0].version }} {{ software[0].build }} {{ system_info.product_information.package_edition }}"

      - fail: msg="Failed, lb version is {{ software[0].version }} {{ software[0].build }} {{ system_info.product_information.package_edition }}, script is tested on version {{ f5_version }} {{ f5_build }} {{ f5_edition }}"
        when: ( f5_version != software[0].version or f5_build != software[0].build or f5_edition != system_info.product_information.package_edition)

- name: Create a Partition, VLAN, Route domain and ip address on F5 BigIP lb
  hosts: all[0]
  connection: local

  tasks:
      - name: Create partition {{partition}} using the default route domain
        bigip_partition:
            name: "{{partition}}"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Create VLAN vlan{{vlan}} and tag on interface {{tagged_interfaces}}
        bigip_vlan:
            name: "vlan{{vlan}}-{{partition}}-LAN"
            description: "{{nlc}}"
            tag: "{{vlan}}"
            tagged_interfaces: "{{tagged_interfaces}}"
            server: "{{inventory_hostname}}"
            partition: "{{partition}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Create route domain and set VLAN {{vlan}} on the route domain
        bigip_routedomain:
            id: "{{vlan}}"     # volgens procedure moet dit een id uit een lijstje zijn, navragen
            description: "{{nlc}}"
            partition: "{{partition}}"
            strict: "enabled"
            vlans:
              - "vlan{{vlan}}-{{partition}}-LAN"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Set default route on the route domain
        bigip_command:
            commands:
              - "tmsh modify auth partition {{partition}} default-route-domain {{vlan}}"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Create Self IP no ha
        when: ha == "no"
        bigip_selfip:
            address: "{{ipprefix}}.251"
            name: "self-vlan{{vlan}}-LAN"
            netmask: "255.255.255.0"
            route_domain: "{{vlan}}"
            vlan: "vlan{{vlan}}-{{partition}}-LAN"
            partition: "{{partition}}"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Create Self IP ha primary
        when: ha == "yes"
        bigip_selfip:
            address: "{{ipprefix}}.251"
            name: "self-vlan{{vlan}}-LAN"
            netmask: "255.255.255.0"
            route_domain: "{{vlan}}"
            vlan: "vlan{{vlan}}-{{partition}}-LAN"
            partition: "{{partition}}"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Create float IP ha primary
        when: ha == "yes"
        bigip_selfip:
            address: "{{ipprefix}}.252"
            name: "float-vlan{{vlan}}-LAN"
            netmask: "255.255.255.0"
            route_domain: "{{vlan}}"
            vlan: "vlan{{vlan}}-{{partition}}-LAN"
            partition: "{{partition}}"
            # traffic_group: "traffic-group-1"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

- name: Create ip's secondary, ha
  hosts: ~.*.2
  connection: local

  tasks:
      - name: Create partition {{partition}} using the default route domain ha secondary
        when: ha == "yes"
        bigip_partition:
            name: "{{partition}}"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Create VLAN vlan{{vlan}} and tag on interface {{tagged_interfaces}} ha secondary
        when: ha == "yes"
        bigip_vlan:
            name: "vlan{{vlan}}-{{partition}}-LAN"
            description: "{{nlc}}"
            tag: "{{vlan}}"
            tagged_interfaces: "{{tagged_interfaces}}"
            server: "{{inventory_hostname}}"
            partition: "{{partition}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Set VLAN {{vlan}} on the route domain ha secondary
        when: ha == "yes"
        bigip_routedomain:
            id: "{{vlan}}"
            description: "{{nlc}}"
            partition: "{{partition}}"
            strict: "enabled"
            vlans:
              - "vlan{{vlan}}-{{partition}}-LAN"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Create Self IP ha secondary
        when: ha == "yes"
        bigip_selfip:
            address: "{{ipprefix}}.253"
            name: "self-vlan{{vlan}}-LAN"
            netmask: "255.255.255.0"
            route_domain: "{{vlan}}"
            vlan: "vlan{{vlan}}-{{partition}}-LAN"
            partition: "{{partition}}"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Create float IP ha secondary
        when: ha == "yes"
        bigip_selfip:
            address: "{{ipprefix}}.251"
            name: "float-vlan{{vlan}}-LAN"
            netmask: "255.255.255.0"
            route_domain: "{{vlan}}"
            vlan: "vlan{{vlan}}-{{partition}}-LAN"
            partition: "{{partition}}"
            # traffic_group: "traffic-group-1"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Save configuration ha secondary
        when: ha == "yes"
        bigip_config:
            save: yes
            server:  "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

- name: Create default route's and save configuration
  hosts: all[0]
  connection: local

  tasks:
      - name: Remove default route  # the next job (Create default route) wil fail if route is presen
        bigip_static_route:
            name: "vlan{{vlan}}-{{klantnaam}}-default"
            state: "absent"
            description: "{{nlc}}"
            destination: "0.0.0.0/0.0.0.0"
            gateway_address: "{{ipprefix}}.254"
            partition: "{{partition}}"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost
        ignore_errors: yes

      - name: Create default route
        bigip_static_route:
            name: "vlan{{vlan}}-{{klantnaam}}-default"
            description: "{{nlc}}"
            destination: "0.0.0.0/0.0.0.0"
            gateway_address: "{{ipprefix}}.254"
            partition: "{{partition}}"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Create ssl certificate
        when: cert_name != ""
        bigip_ssl_certificate:
            name: "{{cert_name}}"
            cert_content: "{{cert_crt}}"
            key_content: "{{cert_key}}"
            partition: "{{partition}}"
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Save configuration primary
        bigip_config:
            save: yes
            server:  "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost

      - name: Sync configuration from device to group
        when: ha == "yes"
        bigip_configsync_actions:
            device_group: "device_trust_group"
            sync_device_to_group: yes
            server: "{{inventory_hostname}}"
            user: "{{user}}"
            password: "{{password}}"
            validate_certs: "{{validate_certs}}"
        delegate_to: localhost
